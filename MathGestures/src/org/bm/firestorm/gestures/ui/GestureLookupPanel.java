/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GestureLookupPanel.java
 *
 * Created on Dec 11, 2009, 4:26:53 PM
 */

package org.bm.firestorm.gestures.ui;

import org.bm.firestorm.functionspace.FunctionUtils;
import org.bm.firestorm.functionspace.ONLegendre;
import org.bm.firestorm.gestures.data.CoefficientClassifier;
import org.bm.firestorm.gestures.data.TrainGesture;

/**
 *
 * @author ae3263
 */
public class GestureLookupPanel extends javax.swing.JPanel {

    /** Stores array of pointers to the best gestures found. */
    transient TrainGesture[] best;
    /** Stores the distances to the best gestures. */
    transient float[] bestDistance;

    /** Creates new form GestureLookupPanel */
    public GestureLookupPanel() {
        initComponents();
    }

    /**
     * Looks for the closest gestures in the provided table to the provided input gesture.
     * Also sets the two mini-panels containing miniature forms of the gestures to be
     * the best two gestures that are found.
     *
     * @param gesture the input gesture to compare with entries in the table
     * @param gTable the table of gestures
     */
    public void lookupGesture(TrainGesture gesture, CoefficientClassifier<String> gTable) {
        best = gTable.nClosestTo(2, gesture);
        bestDistance = new float[Math.min(best.length, 2)];
        if (best.length > 0) {
            llab1.setText(gTable.get(best[0]));
            bestDistance[0] = (float) best[0].distance(gesture);
            ldist1.setText(String.format("d=%.2f", bestDistance[0]));
            lp1.setFunctions(new FunctionUtils.CFunction(ONLegendre.INSTANCE, best[0].getArrays()[0]), new FunctionUtils.CFunction(ONLegendre.INSTANCE, best[0].getArrays()[1]));
        }
        if (best.length > 1) {
            llab2.setText(gTable.get(best[1]));
            bestDistance[1] = (float) best[1].distance(gesture);
            ldist2.setText(String.format("d=%.2f", bestDistance[1]));
            lp2.setFunctions(new FunctionUtils.CFunction(ONLegendre.INSTANCE, best[1].getArrays()[0]), new FunctionUtils.CFunction(ONLegendre.INSTANCE, best[1].getArrays()[1]));
        }
        lp1.repaint();
        lp2.repaint();
    }

    /** Returns the gesture most closely matching the last lookup. */
    public TrainGesture getBestGesture() {
        if (best == null || best.length == 0)
            return null;
        return best[0];
    }

    /** Returns the distance to the best gesture. */
    public float getBestDistance() {
        if (bestDistance == null || bestDistance.length == 0)
            return Float.MAX_VALUE;
        return bestDistance[0];
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lp1 = new org.bm.firestorm.gestures.ui.ParametricPathPanel();
        ldist1 = new javax.swing.JLabel();
        llab1 = new javax.swing.JLabel();
        lp2 = new org.bm.firestorm.gestures.ui.ParametricPathPanel();
        ldist2 = new javax.swing.JLabel();
        llab2 = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();

        lp1.setBackground(new java.awt.Color(250, 250, 250));
        lp1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        lp1.setMaximumSize(new java.awt.Dimension(100, 100));
        lp1.setPreferredSize(new java.awt.Dimension(100, 100));

        ldist1.setText("dist=0.0");

        llab1.setFont(new java.awt.Font("Tahoma", 1, 14));
        llab1.setForeground(new java.awt.Color(204, 0, 51));
        llab1.setText("NONE");

        org.jdesktop.layout.GroupLayout lp1Layout = new org.jdesktop.layout.GroupLayout(lp1);
        lp1.setLayout(lp1Layout);
        lp1Layout.setHorizontalGroup(
            lp1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lp1Layout.createSequentialGroup()
                .add(lp1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ldist1)
                    .add(llab1))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        lp1Layout.setVerticalGroup(
            lp1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, lp1Layout.createSequentialGroup()
                .add(llab1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(ldist1))
        );

        lp2.setBackground(new java.awt.Color(250, 250, 250));
        lp2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        lp2.setMaximumSize(new java.awt.Dimension(100, 100));
        lp2.setPreferredSize(new java.awt.Dimension(100, 100));

        ldist2.setText("dist=0.0");

        llab2.setFont(new java.awt.Font("Tahoma", 1, 14));
        llab2.setForeground(new java.awt.Color(204, 0, 51));
        llab2.setText("NONE");

        org.jdesktop.layout.GroupLayout lp2Layout = new org.jdesktop.layout.GroupLayout(lp2);
        lp2.setLayout(lp2Layout);
        lp2Layout.setHorizontalGroup(
            lp2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lp2Layout.createSequentialGroup()
                .add(lp2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(ldist2)
                    .add(llab2))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        lp2Layout.setVerticalGroup(
            lp2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, lp2Layout.createSequentialGroup()
                .add(llab2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 65, Short.MAX_VALUE)
                .add(ldist2))
        );

        jScrollBar1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jScrollBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lp2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lp1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel ldist1;
    private javax.swing.JLabel ldist2;
    private javax.swing.JLabel llab1;
    private javax.swing.JLabel llab2;
    private org.bm.firestorm.gestures.ui.ParametricPathPanel lp1;
    private org.bm.firestorm.gestures.ui.ParametricPathPanel lp2;
    // End of variables declaration//GEN-END:variables

}
